{"ast":null,"code":"var _jsxFileName = \"F:\\\\jsExercises\\\\foodApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport React from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      const selectedItem = state.items.find(item => item.id === action.item.id);\n\n      if (!selectedItem) {\n        const updatedItems = state.items.concat(action.item);\n      }\n\n      const updatedTotalAmount = state.totalAmount += action.item.amount * action.item.price;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n  }\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCart = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    additem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CartProvider, \"Un1hazveqmmlJ8GCZDqhNrzI/DU=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["F:/jsExercises/foodApp/src/store/CartProvider.js"],"names":["useReducer","React","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","selectedItem","find","item","id","updatedItems","concat","updatedTotalAmount","amount","price","CartProvider","props","cartState","dispatchCartAction","addItemToCart","removeItemFromCart","cartContext","additem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,KAAL;AACE,YAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EAAjD,CAArB;;AACA,UAAG,CAACH,YAAJ,EAAiB;AACf,cAAMI,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACI,IAA1B,CAArB;AACD;;AAED,YAAMI,kBAAkB,GAAGT,KAAK,CAACF,WAAN,IAAqBG,MAAM,CAACI,IAAP,CAAYK,MAAZ,GAAqBT,MAAM,CAACI,IAAP,CAAYM,KAAjF;AACA,aAAM;AACFd,QAAAA,KAAK,EAAEU,YADL;AAEFT,QAAAA,WAAW,EAAEW;AAFX,OAAN;AARN;AAgBH,CAjBD;;AAkBA,MAAMG,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAmCtB,UAAU,CAACM,WAAD,EAAcH,gBAAd,CAAnD;;AACA,QAAMoB,aAAa,GAAIX,IAAD,IAAS;AAC3BU,IAAAA,kBAAkB,CAAC;AACfb,MAAAA,IAAI,EAAE,KADS;AAEfG,MAAAA,IAAI,EAAEA;AAFS,KAAD,CAAlB;AAMH,GAPD;;AAQA,QAAMY,kBAAkB,GAAIX,EAAD,IAAQ;AACvCS,IAAAA,kBAAkB,CAAC;AAACb,MAAAA,IAAI,EAAE,QAAP;AAAiBI,MAAAA,EAAE,EAACA;AAApB,KAAD,CAAlB;AACK,GAFD;;AAGA,QAAMY,WAAW,GAAI;AACjBrB,IAAAA,KAAK,EAAGiB,SAAS,CAACjB,KADD;AAEjBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFN;AAGjBqB,IAAAA,OAAO,EAAEH,aAHQ;AAIjBI,IAAAA,UAAU,EAAEH;AAJK,GAArB;AAMJ,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAGC,WAA9B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGC,CAtBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\r\nimport React from 'react';\r\nimport CartContext from './cart-context'\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n}\r\nconst cartReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD':\r\n          const selectedItem = state.items.find(item => item.id === action.item.id);\r\n          if(!selectedItem){\r\n            const updatedItems = state.items.concat(action.item);\r\n          }\r\n    \r\n          const updatedTotalAmount = state.totalAmount += action.item.amount * action.item.price;\r\n          return{\r\n              items: updatedItems,\r\n              totalAmount: updatedTotalAmount,\r\n          }\r\n      \r\n\r\n        \r\n    }\r\n}\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction ] = useReducer(cartReducer, defaultCartState)\r\n    const addItemToCart = (item) =>{\r\n        dispatchCartAction({\r\n            type: 'ADD',\r\n            item: item\r\n\r\n        })\r\n\r\n    };\r\n    const removeItemFromCart = (id) => {\r\ndispatchCartAction({type: \"REMOVE\", id:id})\r\n    };\r\n    const cartContext =  {\r\n        items : cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        additem: addItemToCart,\r\n        removeItem: removeItemFromCart,\r\n    }\r\nreturn <CartContext.Provider value ={cartContext}>\r\n    {props.children}\r\n</CartContext.Provider>\r\n}\r\n\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}